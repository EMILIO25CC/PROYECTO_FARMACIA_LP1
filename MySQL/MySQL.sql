
DROP DATABASE IF EXISTS BD_FARMAPLUS;

CREATE DATABASE BD_FARMAPLUS; 
USE BD_FARMAPLUS;

CREATE TABLE CLIENTE(
COD_CLIENTE 		INT AUTO_INCREMENT,
DNI_CLIENTE 		CHAR(8) NOT NULL UNIQUE,
NOMBRE_CLIENTE		VARCHAR(40) NOT NULL,
APELLIDO_CLIENTE	VARCHAR(40) NOT NULL,
PRIMARY KEY (COD_CLIENTE)
);

CREATE TABLE EMPLEADO(
COD_EMPLEADO		INT AUTO_INCREMENT,
DNI_EMPLEADO		CHAR(8) NOT NULL UNIQUE,
NOMBRE_EMPLEADO		VARCHAR(40) NOT NULL,
APELLIDO_EMPLEADO	VARCHAR(40) NOT NULL,
TELF_EMPLEADO		CHAR(9) NOT NULL,
CORREO_EMPLEADO		VARCHAR(40) NOT NULL,
DIRE_EMPLEADO		VARCHAR(40) NOT NULL,
TIPO_USUARIO		CHAR(1) NOT NULL,
NOMBRE_USUARIO		VARCHAR(20) NOT NULL,
PAS_USUARIO		VARCHAR(20) NOT NULL,
PRIMARY KEY (COD_EMPLEADO) 
);

CREATE TABLE PROVEEDOR(
COD_PROVEEDOR		INT AUTO_INCREMENT,
RUC_PROVEEDOR		CHAR(11) NOT NULL UNIQUE,
NOMBRE_PROVEEDOR	VARCHAR(40) NOT NULL,
TELF_PROVEEDOR		CHAR(9) NOT NULL,
DIRE_PROVEEDOR		VARCHAR(40) NOT NULL,
CORREO_PROVEEDOR	VARCHAR(40) NULL,
WEB_PROVEEDOR		VARCHAR(40) NULL,
PRIMARY KEY (COD_PROVEEDOR)
);

CREATE TABLE MARCA(
COD_MARCA 			INT AUTO_INCREMENT,
NOMBRE_MARCA 		VARCHAR(40) NOT NULL,
PRIMARY KEY (COD_MARCA)
);

CREATE TABLE CATEGORIA(
NUM_CATEGORIA 		INT AUTO_INCREMENT,
NOMBRE_CATEGORIA	VARCHAR(40) NOT NULL,
PRIMARY KEY(NUM_CATEGORIA)
);

CREATE TABLE UNIDAD_MEDIDA(
COD_UNIDAD 			INT AUTO_INCREMENT,
ABTR_UNIDAD 		VARCHAR(20) NOT NULL,
DESCRIPCION_UNIDAD 	VARCHAR(50) NOT NULL,
PRIMARY KEY (COD_UNIDAD) 
);

CREATE TABLE PRODUCTO(
COD_PROD 			INT AUTO_INCREMENT,
NUM_CATEGORIA 		INT NOT NULL,
NOMBRE_PRODUCTO 	VARCHAR(30) NOT NULL,
PRECIO_UNIT_COMPRA 	DECIMAL(10,2) NOT NULL,
PRECIO_UNIT_VENTA 	DECIMAL(10,2) NOT NULL,
STOCK_MIN 			INT NOT NULL,
STOCK_MAX 			INT NOT NULL,
COD_MARCA 			INT NOT NULL,
PRESENTACION 		VARCHAR(20) NOT NULL,
M_CONTROLADO 		BIT NOT NULL,
CHECK (PRECIO_UNIT_COMPRA > 0),
CHECK (PRECIO_UNIT_VENTA > 0),
CHECK (STOCK_MIN >= 0),
CHECK (STOCK_MAX >= 0),
FOREIGN KEY(NUM_CATEGORIA) REFERENCES CATEGORIA(NUM_CATEGORIA),
FOREIGN KEY(COD_MARCA) REFERENCES MARCA(COD_MARCA),
PRIMARY KEY (COD_PROD)
);

CREATE TABLE UM_PRODUCTO (
COD_UNIDAD 			INT NOT NULL,
COD_PRODUCTO 		INT NOT NULL,
FACTOR_CONVERCION 	INT NOT NULL,
FOREIGN KEY(COD_UNIDAD) REFERENCES UNIDAD_MEDIDA(COD_UNIDAD),
FOREIGN KEY(COD_PRODUCTO) REFERENCES PRODUCTO(COD_PROD),
PRIMARY KEY(COD_UNIDAD, COD_PRODUCTO)
);

CREATE TABLE LOTE(
NRO_LOTE			INT AUTO_INCREMENT,
COD_PROD			INT NOT NULL,
STOCK				INT NOT NULL,
FECHA_VENCIMIENTO	DATE,
FECHA_FABRICACION	DATE,
CONDICIONES_TRANSPORTE	VARCHAR(200),
FOREIGN KEY (COD_PROD) REFERENCES PRODUCTO(COD_PROD),
PRIMARY KEY (NRO_LOTE)
);

CREATE TABLE BOLETA(
COD_BOLETA			INT AUTO_INCREMENT,
COD_CLIENTE			INT NOT NULL,
COD_EMPLEADO		INT NOT NULL,
METODO_PAGO			VARCHAR(15),
FECHA_EMISION		DATE,
CHECK(METODO_PAGO IN ('EFECTIVO', 'TRANSFERENCIA')),
FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE (COD_CLIENTE),
FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADO (COD_EMPLEADO),
PRIMARY KEY(COD_BOLETA)	
);

CREATE TABLE DETALLE_BOLETA(
COD_BOLETA 			INT NOT NULL,
COD_LOTE 			INT NOT NULL,
COD_PROD	 		INT NOT NULL,
COD_UNIDAD			INT NOT NULL,
CANTIDAD_VENDIDA_BASE INT NOT NULL,
CANTIDAD_VENDIDA_PRES INT NOT NULL,
PRECIO_UNIT_VENTA	DECIMAL(10,2) NOT NULL,
CHECK (CANTIDAD_VENDIDA_BASE > 0),
CHECK (CANTIDAD_VENDIDA_PRES > 0),
CHECK (PRECIO_UNIT_VENTA > 0),
FOREIGN KEY (COD_BOLETA) REFERENCES	BOLETA(COD_BOLETA),
FOREIGN KEY (COD_LOTE) REFERENCES LOTE(NRO_LOTE),
FOREIGN KEY (COD_PROD) REFERENCES PRODUCTO(COD_PROD),
FOREIGN KEY (COD_UNIDAD) REFERENCES UNIDAD_MEDIDA(COD_UNIDAD),
PRIMARY KEY (COD_BOLETA, COD_LOTE)
);

CREATE TABLE FACTURA_PROVEEDOR(
COD_FACTURA			INT AUTO_INCREMENT,
COD_PROVEEDOR		INT NOT NULL,
COD_EMPLEADO		INT NOT NULL,
FECHA_EMISION		DATE,
METODO_PAGO			VARCHAR(15),
CHECK(METODO_PAGO IN ('EFECTIVO', 'TRANSFERENCIA')),
FOREIGN KEY (COD_PROVEEDOR) REFERENCES PROVEEDOR(COD_PROVEEDOR),
FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADO(COD_EMPLEADO),
PRIMARY KEY (COD_FACTURA)
);

CREATE TABLE DETALLE_FACTURA(
NRO_LOTE			INT NOT NULL,
NRO_FACTURA			INT NOT NULL,
COD_PROD			INT NOT NULL,
COD_UNIDAD			INT NOT NULL,
CANTIDAD_RECIBIDA_BASE INT NOT NULL,
CANTIDAD_RECIBIDA_PRES INT NOT NULL,
PRECIO_UNIT_COMPRA	DECIMAL(10,2) NOT NULL,
CHECK (CANTIDAD_RECIBIDA_BASE > 0),
CHECK (CANTIDAD_RECIBIDA_PRES > 0),
CHECK (PRECIO_UNIT_COMPRA > 0),
FOREIGN KEY (NRO_FACTURA) REFERENCES	FACTURA_PROVEEDOR(COD_FACTURA),
FOREIGN KEY (NRO_LOTE) REFERENCES LOTE(NRO_LOTE),
FOREIGN KEY (COD_PROD) REFERENCES PRODUCTO(COD_PROD),
FOREIGN KEY (COD_UNIDAD) REFERENCES UNIDAD_MEDIDA(COD_UNIDAD),
PRIMARY KEY (NRO_FACTURA, NRO_LOTE)
);

/*PROCEDIMIENTOS ALMACENADOS PARA CATEGORIA-------------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_CATEGORIA(
NOM_CATE			VARCHAR(40)
)
INSERT INTO CATEGORIA VALUES(NULL, NOM_CATE);

CREATE PROCEDURE SP_MODIFICAR_CATEGORIA(
COD_CATE 			INT,
NOM_CATE			VARCHAR(40)
)
UPDATE CATEGORIA SET NOMBRE_CATEGORIA=NOM_CATE
WHERE NUM_CATEGORIA = COD_CATE;

CREATE PROCEDURE SP_ELIMINAR_CATEGORIA(
COD_CATE			INT
)
DELETE FROM CATEGORIA
WHERE NUM_CATEGORIA = COD_CATE;

CREATE PROCEDURE SP_LISTAR_CATEGORIA()
SELECT * FROM CATEGORIA;

CREATE PROCEDURE SP_BUSCAR_CATEGORIA(
COD_CATE			INT
)
SELECT * FROM CATEGORIA
WHERE NUM_CATEGORIA = COD_CATE;

/*PROCEDIMIENTOS ALMACENADOS PARA CLIENTE---------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_CLIENTE(
DNI_CLI			CHAR(8),
NOM_CLI         VARCHAR(40),
APE_CLI         VARCHAR(40)
)
INSERT INTO CLIENTE VALUES(NULL, DNI_CLI, NOM_CLI, APE_CLI);

CREATE PROCEDURE SP_MODIFICAR_CLIENTE(
COD_CLI 		INT,
DNI_CLI			CHAR(8),
NOM_CLI         VARCHAR(40),
APE_CLI         VARCHAR(40)
)
UPDATE CLIENTE SET DNI_CLIENTE=DNI_CLI, NOMBRE_CLIENTE=NOM_CLI, APELLIDO_CLIENTE=APE_CLI
WHERE COD_CLIENTE = COD_CLI;

CREATE PROCEDURE SP_ELIMINAR_CLIENTE(
COD_CLI			INT
)
DELETE FROM CLIENTE
WHERE COD_CLIENTE = COD_CLI;

CREATE PROCEDURE SP_LISTAR_CLIENTE()
SELECT * FROM CLIENTE;

CREATE PROCEDURE SP_BUSCAR_CLIENTE(
COD_CLI			INT
)
SELECT * FROM CLIENTE
WHERE COD_CLIENTE = COD_CLI;

/*PROCEDIMIENTOS ALMACENADOS PARA EMPLEADO---------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_EMPLEADO(
DNI_EMPL		CHAR(8),
NOM_EMPL        VARCHAR(40),
APE_EMPL        VARCHAR(40),
TELEF_EMPL      CHAR(9),
CORREO_EMPL     VARCHAR(40),
DIRE_EMPL       VARCHAR(40),
TIPO_USER       CHAR(1),
NOM_USER        VARCHAR(20),
PASS_USER       VARCHAR(20)
)
INSERT INTO EMPLEADO VALUES(NULL, DNI_EMPL, NOM_EMPL, APE_EMPL, TELEF_EMPL, CORREO_EMPL, DIRE_EMPL, TIPO_USER, NOM_USER, PASS_USER);

CREATE PROCEDURE SP_MODIFICAR_EMPLEADO(
COD_EMPL        INT,
DNI_EMPL		CHAR(8),
NOM_EMPL        VARCHAR(40),
APE_EMPL        VARCHAR(40),
TELEF_EMPL      CHAR(9),
CORREO_EMPL     VARCHAR(40),
DIRE_EMPL       VARCHAR(40),
TIPO_USER       CHAR(1),
NOM_USER        VARCHAR(20),
PASS_USER       VARCHAR(20)
)
UPDATE EMPLEADO SET DNI_EMPLEADO=DNI_EMPL, NOMBRE_EMPLEADO=NOM_EMPL, APELLIDO_EMPLEADO=APE_EMPL, TELF_EMPLEADO=TELEF_EMPL, CORREO_EMPLEADO=CORREO_EMPL, DIRE_EMPLEADO=DIRE_EMPL, TIPO_USUARIO=TIPO_USER, NOMBRE_USUARIO=NOM_USER, PAS_USUARIO=PASS_USER
WHERE COD_EMPLEADO = COD_EMPL;

CREATE PROCEDURE SP_ELIMINAR_EMPLEADO(
COD_EMPL		INT
)
DELETE FROM EMPLEADO
WHERE COD_EMPLEADO = COD_EMPL;

CREATE PROCEDURE SP_LISTAR_EMPLEADO()
SELECT * FROM EMPLEADO;

CREATE PROCEDURE SP_BUSCAR_EMPLEADO(
COD_EMPL			INT
)
SELECT * FROM EMPLEADO
WHERE COD_EMPLEADO = COD_EMPL;

/*PROCEDIMIENTOS ALMACENADOS PARA PROVEEDOR---------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_PROVEEDOR(
RUC_PROV		CHAR(11),
NOMBRE_PROV	    VARCHAR(40),
TELF_PROV		CHAR(9),
DIRE_PROV		VARCHAR(40),
CORREO_PROV	    VARCHAR(40),
WEB_PROV		VARCHAR(40)
)
INSERT INTO PROVEEDOR VALUES(NULL, RUC_PROV, NOMBRE_PROV, TELF_PROV, DIRE_PROV, CORREO_PROV, WEB_PROV);

CREATE PROCEDURE SP_MODIFICAR_PROVEEDOR(
COD_PROV        INT,
RUC_PROV		CHAR(11),
NOMBRE_PROV	    VARCHAR(40),
TELF_PROV		CHAR(9),
DIRE_PROV		VARCHAR(40),
CORREO_PROV	    VARCHAR(40),
WEB_PROV		VARCHAR(40)
)
UPDATE PROVEEDOR SET RUC_PROVEEDOR=RUC_PROV, NOMBRE_PROVEEDOR=NOMBRE_PROV, TELF_PROVEEDOR=TELF_PROV, DIRE_PROVEEDOR=DIRE_PROV, CORREO_PROVEEDOR=CORREO_PROV, WEB_PROVEEDOR=WEB_PROV
WHERE COD_PROVEEDOR = COD_PROV;

CREATE PROCEDURE SP_ELIMINAR_PROVEEDOR(
COD_PROV		INT
)
DELETE FROM PROVEEDOR
WHERE COD_PROVEEDOR = COD_PROV;

CREATE PROCEDURE SP_LISTAR_PROVEEDOR()
SELECT * FROM PROVEEDOR;

CREATE PROCEDURE SP_BUSCAR_PROVEEDOR(
COD_PROV			INT
)
SELECT * FROM PROVEEDOR
WHERE COD_PROVEEDOR = COD_PROV;

/*PROCEDIMIENTOS ALMACENADOS PARA MARCA-------------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_MARCA(
NOM_MAR			VARCHAR(40)
)
INSERT INTO MARCA VALUES(NULL, NOM_MAR);

CREATE PROCEDURE SP_MODIFICAR_MARCA(
COD_MAR 		INT,
NOM_MAR			VARCHAR(40)
)
UPDATE MARCA SET NOMBRE_MARCA=NOM_MAR
WHERE COD_MARCA = COD_MAR;

CREATE PROCEDURE SP_ELIMINAR_MARCA(
COD_MAR			INT
)
DELETE FROM MARCA
WHERE COD_MARCA = COD_MAR;

CREATE PROCEDURE SP_LISTAR_MARCA()
SELECT * FROM MARCA;

CREATE PROCEDURE SP_BUSCAR_MARCA(
COD_MAR			INT
)
SELECT * FROM MARCA
WHERE COD_MARCA = COD_MAR;

/*PROCEDIMIENTOS ALMACENADOS PARA UNIDAD DE MEDIDA-------------------------------------------------------------------------------------*/
CREATE PROCEDURE SP_REGISTRAR_UM(
ABTR_UND 		    VARCHAR(20),
DESCRIPCION_UND 	VARCHAR(50)
)
INSERT INTO UNIDAD_MEDIDA VALUES(NULL, ABTR_UND, DESCRIPCION_UND);

CREATE PROCEDURE SP_MODIFICAR_UM(
COD_UND 		    INT,
ABTR_UND 		    VARCHAR(20),
DESCRIPCION_UND 	VARCHAR(50)
)
UPDATE UNIDAD_MEDIDA SET ABTR_UNIDAD=ABTR_UND, DESCRIPCION_UNIDAD=DESCRIPCION_UND
WHERE COD_UNIDAD = COD_UND;

CREATE PROCEDURE SP_ELIMINAR_UM(
COD_UND			INT
)
DELETE FROM UNIDAD_MEDIDA
WHERE COD_UNIDAD = COD_UND;

CREATE PROCEDURE SP_LISTAR_UM()
SELECT * FROM UNIDAD_MEDIDA;

CREATE PROCEDURE SP_BUSCAR_UM(
COD_UND			INT
)
SELECT * FROM UNIDAD_MEDIDA
WHERE COD_UNIDAD = COD_UND;